@model Consultorio.Domain.Models.Funcionario

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Funcionário</h2>

@using (Html.BeginForm())
{
    if (!Html.ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger" role="alert">
            @Html.ValidationSummary()
        </div>
    }

    @Html.AntiForgeryToken()

    <fieldset>
        @Html.HiddenFor(model => model.Id)
        <div class="panel panel-default">
            <div class="panel-body">
                <form class="form-horizontal" role="form">
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="col-sm-2 control-label ">Empresa</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.DropDownList("EmpresaId", (SelectList)ViewBag.Empresas, string.Empty, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="col-sm-2 control-label ">Departamento</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.DropDownList("DepartamentoId", (SelectList)ViewBag.Departamentos, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Cargo</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.DropDownList("CargoId", (SelectList)ViewBag.Cargos, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Funcionário</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Nome, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Situação</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.DropDownList("SituacaoId", (SelectList)ViewBag.SituacaoFuncionario, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Periodicidade</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.DropDownList("PeriodicidadeId", (SelectList)ViewBag.Periodicidades, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">RG</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Rg, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Cargo Anterior</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.CargoAnterior, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Naturalidade</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Naturalidade, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Nacionalidade</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Nacionalidade, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Sexo</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.DropDownList("SexoId", (SelectList)ViewBag.Sexos, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Data Nascimento</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.DataNascimento, new { @class = "form-control datepicker" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Data Admissão</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.DataAdmissao, new { @class = "form-control datepicker" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="control-label col-sm-2">Data Demissão</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.DataDemissao, new { @class = "form-control datepicker" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="display-label">
                            <label class="col-sm-2 control-label">Ativo</label>
                        </div>
                        <div class="col-sm-10">
                            @Html.CheckBoxFor(model => model.AtivoCheck)
                        </div>
                    </div>

                </form>
            </div>
        </div>
        <p>
            <input type="submit" value="Salvar" class="btn btn-primary" />
            <input type="button" class="btn btn-primary" value="Cancelar" onclick="location.href='@Url.Action("Index", "Funcionario", new { empresaId = Model.Id })'" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#EmpresaId").change(function () {
            $("#DepartamentoId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartamento")',
                dataType: 'json',
                data: { empresaId: $("#EmpresaId").val() },
                success: function (departamento) {
                    $.each(departamento, function (i, departamento) {
                        $("#DepartamentoId").append('<option value="' + departamento.Value + '">' +
                            departamento.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        $("#DepartamentoId").change(function () {
            $("#CargoId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCargo")',
                dataType: 'json',
                data: { departamentoId: $("#DepartamentoId").val() },
                success: function (cargo) {

                    $.each(cargo, function (i, cargo) {
                        $("#CargoId").append('<option value="' + cargo.Value + '">' +
                            cargo.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        $('.datepicker').datepicker({
            startDate: '0d'
        });
    });
</script>

<script type='text/javascript'>
    function adicionarItem(selectbox1, selectbox2) {
        var i;
        for (i = selectbox1.options.length - 1; i >= 0; i--) {
            if (selectbox1.options[i].selected) {
                selectbox2.add(selectbox1.options[i]);
            }
        }
        for (i = selectbox1.options.length - 1; i >= 0; i--) {
            if (selectbox1.options[i].selected) {
                selectbox1.remove(i);
            }
        }
    }
    function selectAll(selectbox) {
        componente = document.getElementById(selectbox);
        var i;
        for (i = 0; i < componente.options.length; i++) {
            componente.options[i].selected = true;
        }
    }
</script>